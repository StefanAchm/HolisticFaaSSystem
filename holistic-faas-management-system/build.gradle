plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.5'
    id 'io.spring.dependency-management' version '1.1.4'
    id "com.github.node-gradle.node" version "7.0.0"
}

group = 'com.asi'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

task prepareKotlinBuildScriptModel {

}

node {

    version = '16.13.2'
//    npmVersion = '8.1.2'
    download = true

    // define variable to frontend dir
    def frontendDir = "${project.projectDir}/../holistic-faas-ui"

    println("FrontendDir:" + frontendDir)

    workDir = file("${project.projectDir}/.gradle/nodejs")
    nodeProjectDir = file("${project.projectDir}/../holistic-faas-ui")

//    yarnVersion = '1.22.17'
//    yarnWorkDir = file("$buildDir/yarn")
//    yarnNodeModulesDir = file("$buildDir/yarn/node_modules")
}

//task npmInstall(type: NpmTask) {
//    args = ['install']
//}

task npmRunServe(type: NpmTask) {
    args = ['run', 'serve']
}

task buildFrontend(dependsOn: 'npmInstall') {
    dependsOn npmRunServe
}

bootRun {
    dependsOn buildFrontend
}

dependencies {


    ////////////////////////////////////////////////////////////////////////
    // AWS

    implementation platform("software.amazon.awssdk:bom:2.21.1")

    // V1
//    implementation 'com.amazonaws:aws-java-sdk-lambda:1.12.669'
//    implementation 'com.amazonaws:aws-lambda-java-core:1.2.3'

    // V2
    implementation 'software.amazon.awssdk:sdk-core:2.24.9'
    implementation 'software.amazon.awssdk:lambda:2.24.9'

    ////////////////////////////////////////////////////////////////////////
    // GCP

    implementation 'com.google.cloud:google-cloud-functions:2.38.0'
    implementation 'com.google.auth:google-auth-library-oauth2-http:1.23.0'
    implementation 'com.google.cloud:google-cloud-storage:2.9.1'


    ////////////////////////////////////////////////////////////////////////
    // Spring and other dependencies

    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'

    implementation 'com.google.code.gson:gson:2.10.1'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    runtimeOnly 'org.postgresql:postgresql'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}
