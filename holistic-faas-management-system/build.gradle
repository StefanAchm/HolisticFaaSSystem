plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.5'
    id 'io.spring.dependency-management' version '1.1.4'
    id "com.palantir.git-version" version "3.0.0"
}

ext {
    baseVersion = '1.0'
}

group = 'com.asi'
version = getVersionFromGit()

println 'Building project: ' + name + ' with version ' + version

def getVersionFromGit() {

    String shortVersion = baseVersion + "." + versionDetails().commitDistance

    return shortVersion

}

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

///////////////////////////////////////////
// Build info:
//
// Currently, there is a dummy build-info.properties file in the resources folder
// To make sure that this file is overwritten with the correct information,
// we need to exclude it from the resources, but include the file generated by spring boot!
// Furthermore, we also need to include other files in the resources folder!

springBoot {
    buildInfo ()
}

sourceSets {
    main {
        resources {
            srcDirs = ['src/main/resources']
            exclude '**/build-info.properties'
        }
    }
}




dependencies {


    ////////////////////////////////////////////////////////////////////////
    // AWS

    implementation platform("software.amazon.awssdk:bom:2.21.1")

    // V1
//    implementation 'com.amazonaws:aws-java-sdk-lambda:1.12.669'
//    implementation 'com.amazonaws:aws-lambda-java-core:1.2.3'

    // V2
    implementation 'software.amazon.awssdk:sdk-core:2.24.9'
    implementation 'software.amazon.awssdk:lambda:2.24.9'
    implementation 'software.amazon.awssdk:iam:2.25.53'


    ////////////////////////////////////////////////////////////////////////
    // GCP

    implementation 'com.google.cloud:google-cloud-functions:2.38.0'
    implementation 'com.google.auth:google-auth-library-oauth2-http:1.23.0'
    implementation 'com.google.cloud:google-cloud-storage:2.37.0'


    ////////////////////////////////////////////////////////////////////////
    // Spring and other dependencies

    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'org.springframework.boot:spring-boot-starter-security'
//    implementation 'io.jsonwebtoken:jjwt-root:0.12.5'

    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
    implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'

    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'

    implementation 'com.google.code.gson:gson:2.10.1'

    implementation 'org.yaml:snakeyaml'

    implementation 'javax.validation:validation-api:2.0.1.Final'

    implementation files('externalLibs/afclCore.jar')

    implementation 'com.github.java-json-tools:json-schema-validator:2.2.14'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    runtimeOnly 'org.postgresql:postgresql'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}
